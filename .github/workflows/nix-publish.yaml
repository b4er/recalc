name: Publish Extension

on:
  push:
    branches: [main]

concurrency:
  group: recalc-publish-${{github.ref}}
  cancel-in-progress: false

jobs:
  nix-publish:
    name: Publish Extension
    runs-on: ubuntu-latest
    environment: main
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check Versions
        id: versions
        run: |
          gh auth login --with-token <<< "${{secrets.GITHUB_TOKEN}}"
          latest_successful_run="$(
            gh api --jq '.workflow_runs | map(select(.conclusion == "success")) | .[0].head_sha' \
              /repos/${{github.repository}}/actions/workflows/nix-publish.yaml/runs
          )"

          old_version="$(jq -r .version <(git show "${latest_successful_run:-${{github.event.before}}}":recalc-vscode/package.json))"
          new_version="$(jq -r .version <(git show ${{github.event.after}}:recalc-vscode/package.json))"

          echo "old_version=${old_version}" >> "${GITHUB_OUTPUT}"
          echo "new_version=${new_version}" >> "${GITHUB_OUTPUT}"

      - name: Set Up Nix
        if: ${{ steps.versions.outputs.old_version != steps.versions.outputs.new_version }}
        uses: cachix/install-nix-action@v27

      - name: Set Up Cachix (write)
        if: ${{ steps.versions.outputs.old_version != steps.versions.outputs.new_version }}
        uses: cachix/cachix-action@v15
        with:
          name: recalc-cache
          authToken: ${{secrets.CACHIX_AUTH_TOKEN}}

      - name: Publish Extension
        if: ${{ steps.versions.outputs.old_version != steps.versions.outputs.new_version }}
        env:
          VSCE_PAT: ${{secrets.RECALC_VSCODE_PAT}}
        run: nix --accept-flake-config run .#publish
